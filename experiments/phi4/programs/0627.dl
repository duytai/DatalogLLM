.decl person(p: symbol)
.decl hazard(o: symbol)
.decl obstruction(o: symbol)
.decl causes(p: symbol, o: symbol)
.decl violation(p: symbol, o: symbol)

violation(p, o) :- person(p), (obstruction(o); hazard(o)), causes(p, o).
person("friend1").
person("friend2").
obstruction("door_holding").
causes("friend1", "door_holding").
violation("friend1", "door_holding").
.output violation