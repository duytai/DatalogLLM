.decl person(p: symbol)
.decl consumes(p: symbol, item: symbol)
.decl chewing_gum(item: symbol)
.decl bubble_gum(item: symbol)
.decl violation(p: symbol, item: symbol)

violation(p, item) :- person(p), consumes(p, item), (chewing_gum(item); bubble_gum(item)).
person("young_woman").
consumes("young_woman", "chewing_gum").
chewing_gum("chewing_gum").
violation("young_woman", "chewing_gum").
.output violation