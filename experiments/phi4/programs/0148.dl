.decl person(p: symbol)
.decl premises(pr: symbol)
.decl licensed_premises(pr: symbol)
.decl assigns(p: symbol, pr: symbol)
.decl leases(p: symbol, pr: symbol)
.decl lets(p: symbol, pr: symbol)
.decl relinquishes_management(p: symbol, pr: symbol)
.decl violation(p: symbol, pr: symbol)

violation(p, pr) :- person(p), premises(pr), licensed_premises(pr), (assigns(p, pr); leases(p, pr); lets(p, pr); relinquishes_management(p, pr)).
person("restaurant_owner").
person("karaoke_bar_owner").
premises("restaurant_section").
licensed_premises("restaurant_section").
assigns("restaurant_owner", "restaurant_section").
violation("restaurant_owner", "restaurant_section").
.output violation