.decl person(p: symbol)
.decl premises(pr: symbol)
.decl enters(p: symbol, pr: symbol)
.decl remains(p: symbol, pr: symbol)
.decl intoxicated(p: symbol)
.decl under_influence(p: symbol)
.decl violation(p: symbol, pr: symbol)

violation(p, pr) :- person(p), premises(pr), (enters(p, pr); remains(p, pr)), (intoxicated(p); under_influence(p)).
person("p1").
person("p2").
person("p3").
premises("subway_station").
enters("p1", "subway_station").
enters("p2", "subway_station").
enters("p3", "subway_station").
under_influence("p1").
under_influence("p2").
under_influence("p3").
violation("p1", "subway_station").
violation("p2", "subway_station").
violation("p3", "subway_station").
.output violation