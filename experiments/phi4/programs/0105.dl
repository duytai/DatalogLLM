.decl person(p: symbol)
.decl license(l: symbol)
.decl licensing_officer(o: symbol)
.decl police_officer(o: symbol)
.decl has_license(p: symbol, l: symbol)
.decl requests_license(o: symbol, p: symbol)
.decl fails_to_produce(p: symbol, l: symbol)
.decl violation(p: symbol, l: symbol, o: symbol)

violation(p, l, o) :- person(p), person(o), license(l), !has_license(p, l).
violation(p, l, o) :- person(p), person(o), license(l), has_license(p, l), (licensing_officer(o); police_officer(o)), requests_license(o, p), fails_to_produce(p, l).
person("nightclub").
person("police_officer").
license("liquor_license").
has_license("nightclub", "liquor_license").
police_officer("police_officer").
requests_license("police_officer", "nightclub").
fails_to_produce("nightclub", "liquor_license").
violation("nightclub", "liquor_license", "police_officer").
.output violation