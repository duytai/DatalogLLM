.decl person(p: symbol)
.decl administrative_charge(c: symbol)
.decl required_to_pay(p: symbol, c: symbol)
.decl has_paid(p: symbol, c: symbol)
.decl violation(p: symbol, c: symbol)

violation(p, c) :- person(p), administrative_charge(c), required_to_pay(p, c), !has_paid(p, c).
person("friend1").
person("friend2").
person("friend3").
person("friend4").
person("friend5").
administrative_charge("single_ticket_charge").
required_to_pay("friend1", "single_ticket_charge").
required_to_pay("friend2", "single_ticket_charge").
required_to_pay("friend3", "single_ticket_charge").
required_to_pay("friend4", "single_ticket_charge").
required_to_pay("friend5", "single_ticket_charge").
// Since none of the friends have paid, we do not include has_paid facts.
.output violation