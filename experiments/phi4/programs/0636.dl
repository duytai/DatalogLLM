.decl person(p: symbol)
.decl premises(pr: symbol)
.decl enters(p: symbol, pr: symbol)
.decl remains(p: symbol, pr: symbol)
.decl intoxicated(p: symbol)
.decl under_influence(p: symbol)
.decl violation(p: symbol, pr: symbol)

violation(p, pr) :- person(p), premises(pr), (enters(p, pr); remains(p, pr)), (intoxicated(p); under_influence(p)).
person("friend1").
person("friend2").
premises("train_platform").
premises("train").
enters("friend1", "train_platform").
enters("friend2", "train_platform").
enters("friend1", "train").
enters("friend2", "train").
remains("friend1", "train_platform").
remains("friend2", "train_platform").
remains("friend1", "train").
remains("friend2", "train").
intoxicated("friend1").
.output violation