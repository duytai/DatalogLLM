.decl person(p: symbol)
.decl premises(pr: symbol)
.decl enters(p: symbol, pr: symbol)
.decl remains(p: symbol, pr: symbol)
.decl unfit_condition(p: symbol)
.decl clothing(p: symbol, c: symbol)
.decl causes_soiling(c: symbol)
.decl causes_damage(c: symbol)
.decl causes_injury(c: symbol)
.decl violation(p: symbol, pr: symbol, c: symbol)

violation(p, pr, "_") :- person(p), premises(pr), (enters(p, pr); remains(p, pr)), unfit_condition(p).
violation(p, pr, c) :- person(p), premises(pr), (enters(p, pr); remains(p, pr)), clothing(p, c), (causes_soiling(c); causes_damage(c); causes_injury(c)).
person("man1").
premises("platform").
premises("train").
enters("man1", "platform").
remains("man1", "platform").
enters("man1", "train").
clothing("man1", "muddy_boots").
causes_soiling("muddy_boots").
violation("man1", "platform", "muddy_boots").
violation("man1", "train", "muddy_boots").
.output violation