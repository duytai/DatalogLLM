.decl person(p: symbol)
.decl train(t: symbol)
.decl enters(p: symbol, t: symbol)
.decl remains(p: symbol, t: symbol)
.decl is_full(t: symbol)
.decl violation(p: symbol, t: symbol)

violation(p, t) :- person(p), train(t), (enters(p, t); remains(p, t)), is_full(t).
person("p1").
person("p2").
train("train1").
enters("p2", "train1").
remains("p1", "train1").
is_full("train1").
violation("p2", "train1").
.output violation