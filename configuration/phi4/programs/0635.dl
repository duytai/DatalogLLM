.decl person(p: symbol)
.decl premises(pr: symbol)
.decl enters(p: symbol, pr: symbol)
.decl remains(p: symbol, pr: symbol)
.decl intoxicated(p: symbol)
.decl under_influence(p: symbol)
.decl violation(p: symbol, pr: symbol)

violation(p, pr) :- person(p), premises(pr), (enters(p, pr); remains(p, pr)), (intoxicated(p); under_influence(p)).
person("individual1").
premises("platform").
premises("tracks").
enters("individual1", "platform").
remains("individual1", "tracks").
intoxicated("individual1").
under_influence("individual1").
violation("individual1", "platform").
violation("individual1", "tracks").
.output violation