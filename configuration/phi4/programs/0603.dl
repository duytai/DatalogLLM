.decl person(p: symbol)
.decl hazard(o: symbol)
.decl obstruction(o: symbol)
.decl causes(p: symbol, o: symbol)
.decl violation(p: symbol, o: symbol)

violation(p, o) :- person(p), (obstruction(o); hazard(o)), causes(p, o).
person("commuter").
person("passenger").
hazard("running_hazard").
obstruction("running_obstruction").
causes("commuter", "running_hazard").
causes("commuter", "running_obstruction").
.output violation