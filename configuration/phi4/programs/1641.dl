.decl person(p: symbol)
.decl motor_vehicle(mv: symbol)
.decl premises(pr: symbol)
.decl leaves(p: symbol, mv: symbol, pr: symbol)
.decl has_written_permission(p: symbol, pr: symbol)
.decl violation(p: symbol, mv: symbol, pr: symbol)

violation(p, mv, pr) :- person(p), motor_vehicle(mv), premises(pr), leaves(p, mv, pr), !has_written_permission(p, pr).
person("friend1").
person("friend2").
person("friend3").
motor_vehicle("bike1").
motor_vehicle("bike2").
motor_vehicle("bike3").
premises("subway_station").
leaves("friend1", "bike1", "subway_station").
leaves("friend2", "bike2", "subway_station").
leaves("friend3", "bike3", "subway_station").
violation("friend1", "bike1", "subway_station").
violation("friend2", "bike2", "subway_station").
violation("friend3", "bike3", "subway_station").
.output violation