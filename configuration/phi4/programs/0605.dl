.decl person(p: symbol)
.decl hazard(o: symbol)
.decl obstruction(o: symbol)
.decl causes(p: symbol, o: symbol)
.decl violation(p: symbol, o: symbol)

violation(p, o) :- person(p), (obstruction(o); hazard(o)), causes(p, o).
person("passenger1").
obstruction("tracks").
hazard("climbing_tracks").
causes("passenger1", "tracks").
causes("passenger1", "climbing_tracks").
violation("passenger1", "tracks").
violation("passenger1", "climbing_tracks").
.output violation