.decl person(p: symbol)
.decl premises(pr: symbol)
.decl enters(p: symbol, pr: symbol)
.decl remains(p: symbol, pr: symbol)
.decl unfit_condition(p: symbol)
.decl clothing(p: symbol, c: symbol)
.decl causes_soiling(c: symbol)
.decl causes_damage(c: symbol)
.decl causes_injury(c: symbol)
.decl violation(p: symbol, pr: symbol, c: symbol)

violation(p, pr, "_") :- person(p), premises(pr), (enters(p, pr); remains(p, pr)), unfit_condition(p).
violation(p, pr, c) :- person(p), premises(pr), (enters(p, pr); remains(p, pr)), clothing(p, c), (causes_soiling(c); causes_damage(c); causes_injury(c)).
person("young_man").
premises("train_platform").
enters("young_man", "train_platform").
remains("young_man", "train_platform").
unfit_condition("young_man").
clothing("young_man", "rollerblades").
causes_soiling("rollerblades").
causes_damage("rollerblades").
causes_injury("rollerblades").
violation("young_man", "train_platform", "_").
violation("young_man", "train_platform", "rollerblades").
.output violation