.decl person(p: symbol)
.decl premises(pr: symbol)
.decl enters(p: symbol, pr: symbol)
.decl remains(p: symbol, pr: symbol)
.decl unfit_condition(p: symbol)
.decl clothing(p: symbol, c: symbol)
.decl causes_soiling(c: symbol)
.decl causes_damage(c: symbol)
.decl causes_injury(c: symbol)
.decl violation(p: symbol, pr: symbol, c: symbol)

violation(p, pr, "_") :- person(p), premises(pr), (enters(p, pr); remains(p, pr)), unfit_condition(p).
violation(p, pr, c) :- person(p), premises(pr), (enters(p, pr); remains(p, pr)), clothing(p, c), (causes_soiling(c); causes_damage(c); causes_injury(c)).
person("man1").
premises("station1").
premises("train1").
enters("man1", "station1").
remains("man1", "station1").
enters("man1", "train1").
unfit_condition("man1").
clothing("man1", "white_shirt_with_wet_paint").
causes_soiling("wet_paint").
violation("man1", "station1", "white_shirt_with_wet_paint").
violation("man1", "train1", "white_shirt_with_wet_paint").
.output violation