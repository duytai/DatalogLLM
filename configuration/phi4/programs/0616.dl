.decl person(p: symbol)
.decl hazard(o: symbol)
.decl obstruction(o: symbol)
.decl causes(p: symbol, o: symbol)
.decl violation(p: symbol, o: symbol)

violation(p, o) :- person(p), (obstruction(o); hazard(o)), causes(p, o).
person("passenger1").
obstruction("platform_barriers").
hazard("train_departure").
causes("passenger1", "platform_barriers").
causes("passenger1", "train_departure").
violation("passenger1", "platform_barriers").
violation("passenger1", "train_departure").
.output violation